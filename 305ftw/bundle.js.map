{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","\n<script>\n\texport let name;\n\texport let tracks;\n\texport let events;\nlet ips = [\n'192.168.1.6', '192.168.1.8', '192.168.1.7', // testing\n  '172.20.10.2',\n  '172.20.10.3',\n  '172.20.10.4',\n  '172.20.10.5',\n  '172.20.10.6',\n  '172.20.10.7',\n  '172.20.10.8',\n  '172.20.10.9',\n  '172.20.10.10',\n  '172.20.10.11',\n  '172.20.10.12',\n  '172.20.10.13',\n  '172.20.10.14',\n];\nlet backend;\nlet id;\nlet fromdays = 7;\nlet todays = 0;\nlet selectedevent;\nlet selectedtrack;\nlet checking_ll;\nlet trackpromise;\nlet gpspromise;\nlet confirmpromise;\nlet error = false;\nlet liveloxuid;\nlet ll_myself;\nlet confirmed = false;\n\nimport { onMount } from 'svelte';\n\nfunction getBackend() {\n  error = false;\n  for (let ip of ips) {\n    let test = 'https://' + ip + ':5000';\n    fetch(test)\n      .then(response => response.json())\n      .then(data => {\n        data['status'] === 'ok' ? backend = test : false;\n      })\n      .catch(err => {\n        console.log(err);\n        error = 'Could not connect to tethered backend';\n      });\n  }\n}\n\nfunction getTracks() {\n  error = false;\n  tracks = [];\n  events = [];\n  gpspromise = fetch(backend + '/tracks', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({fromdays: fromdays, todays: todays}),\n  })\n  .then(response => response.json())\n  .then(data => {\n    tracks = data['tracks'];\n    id = data['id'];\n    })\n  .catch(err => {\n    console.log(err);\n    error = 'Could not fetch GPS data from watch';\n  });\n}\n\nfunction checktrack(trackid) {\n  error = false;\n  events = [];\n  checking_ll = true;\n  selectedtrack = trackid;\n  trackpromise = fetch(backend + '/loxcheck', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({id: id, track: trackid}),\n  })\n    .then(response => response.json())\n    .then(data => {\n      events = data['events'];\n      liveloxuid = data['lluid'];\n      ll_myself = data['myself'];\n    })\n  //trackpromise = new Promise(res => setTimeout(res, 2000))\n  //.then(d => { console.log('tracks fetched')})\n  .catch(err => {\n    console.log(err);\n    error = 'Error contacting livelox.com';\n    selectedtrack = false;\n    });\n};\n\nfunction confirmTrackEvent(eventclassid) {\n  error = false;\n  confirmed = false;\n  confirmpromise = fetch(backend + '/loxdone', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      id: id,\n      classid: eventclassid,\n      lluid: liveloxuid,\n      myself: ll_myself,\n      }),\n  })\n  .then(d => {confirmed = true;})\n  .catch(err => {\n    console.log(err);\n    error = 'Error confirming livelox event upload';\n    confirmed = false;\n    });\n}\n\n\nonMount(() => {\n  getBackend();\n});\n\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\ntable {\n  border-collapse: collapse;\n}\ntr {\n  border-bottom: 1px solid lightgrey;\n}\nth {\n  text-align: left;\n  padding-right:20px;\n}\ntd {\n  padding-right:20px;\n}\ntr.active {\n  background-color:lightgreen;\n}\nbutton:disabled{\n color:lightgrey;\n background-color: #f4f4f4;\n}\n\narticle {\n  background-color: pink;\n  width: 20%;\n  padding: 1em;\n}\n\n</style>\n\n<h1>305FTW: automates garmin-USB to livelox.com</h1>\n{#if backend }\n  <button on:click={getTracks}>Get tracks from watch</button>\n  <input type=\"number\" min=0 bind:value={fromdays} size=\"1\">days ago until\n  <input type=\"number\" min=0 bind:value={todays} size=\"1\">days ago \n{:else}\n<button on:click={getBackend}>Find backend</button>\n{/if}\n<div>\n{#await gpspromise}\n<i class=\"fas fa-spinner fa-spin\"></i>Fetching GPS data from watch\n{/await}\n</div>\n\n{#if error}\n<article>\nAn error occurred:\n{error}\n</article>\n{/if}\n\n<h3>Tracks</h3>\n<table>\n<thead>\n<tr>\n<th>Start</th>\n<th>Duration</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n{#each tracks as track}\n\n<tr class:active=\"{selectedtrack === track.id}\">\n\n<td>{track.starttime}</td>\n<td>{track.dur_min}:{String(track.dur_sec).padStart(2, '0')}</td>\n<td>\n  {#await trackpromise}\n  <button disabled>Check livelox</button>\n  {#if selectedtrack === track.id}\n  <i class=\"fas fa-spinner fa-pulse\"></i>\n  {/if}\n  {:then }\n  <button on:click={function() {checktrack(track.id)}}>Check livelox</button>\n  {/await}\n</td>\n</tr>\n{/each}\n</tbody>\n</table>\n\n\n<h3>Events</h3>\n<table>\n<tbody>\n{#each events as event}\n<tr class:active=\"{selectedevent === event.id}\">\n<td> {event.eventname}, {event.name}</td>\n<td>\n  {#await confirmpromise}\n  <button disabled>Upload to this event</button>\n  {#if selectedevent === event.id}\n  <i class=\"fas fa-spinner fa-pulse\"></i>\n  {/if}\n  {:then }\n  <button on:click={function() {confirmTrackEvent(event.id)}}>Upload to this event</button>\n  {/await}\n</td>\n</tr>\n{/each}\n</tbody>\n</table>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t  tracks: [],\n\t  events: [],\n\t}\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","to_number","undefined","set_data","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","handle_promise","promise","info","token","type","index","key","resolved","[object Object]","child_ctx","current","blocks","r","c","o","transition_out","m","mount","then","error","catch","pending","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","on_destroy","context","Map","callbacks","ready","hydrate","l","Array","from","childNodes","intro","new_on_destroy","map","filter","mount_component","SvelteComponent","this","$destroy","indexOf","splice","getBackend","getTracks","fromdays","todays","click_handler","selectedtrack","track","id","starttime","dur_min","String","dur_sec","padStart","trackpromise","click_handler_1","selectedevent","eventname","confirmpromise","backend","gpspromise","tracks","events","liveloxuid","ll_myself","ips","ip","test","fetch","response","json","err","console","log","checktrack","trackid","method","headers","Content-Type","body","JSON","stringify","confirmTrackEvent","eventclassid","classid","lluid","myself"],"mappings":"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"}