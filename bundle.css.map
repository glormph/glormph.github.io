{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "\n<script>\n\texport let name;\n\texport let url;\n\texport let tracks;\n\texport let events;\nlet id;\nlet selectedevent;\nlet selectedtrack;\nlet checking_ll;\nlet trackpromise;\nlet gpspromise;\nlet error = false;\n\nimport { onMount } from 'svelte';\n\n\nfunction getTracks() {\n  tracks = [];\n  events = [];\n  gpspromise = fetch(url + '/tracks')\n    .then(response => response.json())\n    .then(data => {\n      tracks = data['tracks'];\n      id = data['id'];\n      })\n    .catch(err => {\n      console.log(err);\n      error = 'Could not fetch GPS data from watch';\n    });\n}\n\nfunction checktrack(trackid) {\n  events = [];\n  checking_ll = true;\n  selectedtrack = trackid;\n  trackpromise = fetch(url + '/loxcheck', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({id: id, track: trackid}),\n  })\n    .then(response => response.json())\n    .then(data => {\n      events = data['events'];\n    })\n  //trackpromise = new Promise(res => setTimeout(res, 2000))\n  //.then(d => { console.log('tracks fetched')})\n  .catch(err => {\n    console.log(err);\n    error = 'Error contacting livelox.com';\n    selectedtrack = false;\n    });\n};\n\nonMount(() => {\n  //getTracks()\n});\n\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\ntable {\n  border-collapse: collapse;\n}\ntr {\n  border-bottom: 1px solid lightgrey;\n}\nth {\n  text-align: left;\n  padding-right:20px;\n}\ntd {\n  padding-right:20px;\n}\ntr.active {\n  background-color:lightgreen;\n}\nbutton:disabled{\n color:lightgrey;\n background-color: #f4f4f4;\n}\n\narticle {\n  background-color: pink;\n  width: 20%;\n  padding: 1em;\n}\n\n</style>\n\n<h1>305FTW: automates garmin-USB to livelox.com</h1>\n<button on:click={getTracks}>Get tracks from watch</button>\n{#await gpspromise}\n<i class=\"fas fa-spinner fa-spin\"></i>Fetching GPS data from watch\n{/await}\n\n{#if error}\n<article>\nAn error occurred:\n{error}\n</article>\n{/if}\n\n<h3>Tracks</h3>\n<table>\n<thead>\n<tr>\n<th>Start</th>\n<th>Duration</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n{#each tracks as track}\n\n<tr class:active=\"{selectedtrack === track.id}\">\n\n<td>{track.starttime}</td>\n<td>{track.dur_min}:{String(track.dur_sec).padStart(2, '0')}</td>\n<td>\n  {#await trackpromise}\n  <button disabled>Check livelox</button>\n  {#if selectedtrack === track.id}\n  <i class=\"fas fa-spinner fa-pulse\"></i>\n  {/if}\n  {:then }\n  <button on:click={function() {checktrack(track.id)}}>Check livelox</button>\n  {/await}\n</td>\n</tr>\n{/each}\n</tbody>\n</table>\n\n\n<h3>Events</h3>\n<select bind:value={selectedevent}> \n{#each events as event}\n<option value={event}>\n{event.eventname}, {event.name}</option>\n{/each}\n</select>\n{#if events.length }\n<button on:click={checktrack}>Check livelox</button>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AA6DC,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACd,CAAC,AACF,KAAK,eAAC,CAAC,AACL,eAAe,CAAE,QAAQ,AAC3B,CAAC,AACD,EAAE,eAAC,CAAC,AACF,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,AACpC,CAAC,AACD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,cAAc,IAAI,AACpB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,cAAc,IAAI,AACpB,CAAC,AACD,EAAE,OAAO,eAAC,CAAC,AACT,iBAAiB,UAAU,AAC7B,CAAC,AACD,qBAAM,SAAS,CAAC,AACf,MAAM,SAAS,CACf,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AAED,OAAO,eAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,GAAG,AACd,CAAC"
}